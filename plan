IDEA
- Build a Lisp interpreter in C
- Generate C code using Lisp
- Generate its own interpreter using Lisp
- Modularize the interpreter for extensibility
- Keep functions like eval, apply, mkstruct, read, ... as close as possible to
  their C counterparts. Aka KISS

FIX
- readline
- bool type
- recursive data collection
- collection on exit
- repl should read whole lines at once because that is intuitive to the user.

DESIGN
- file io, File type

IMPLEMENT
- default namespace
- std library

DEFAULTS
- var
- namespaces
- chars and strings
- integers
- pairs
- booleans
- symbols
- printing
- equality

DONE
- functions
- parsing
- evaluating
- reading
- repl
- garbage collection
- tail recursion
- type tags

OPTIONAL
- pattern matching
- interfaces
- function extension
- dynamic scope
