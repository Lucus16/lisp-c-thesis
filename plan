IDEA
- Build a Lisp interpreter in C
- Generate C code using Lisp
- Generate its own interpreter using Lisp
- Modularize the interpreter for extensibility
- Keep functions like eval, apply, mkstruct, read, ... as close as possible to
  their C counterparts.

DESIGN
- function extension
- namespace extension
- interfaces
- chars and strings
- importing

IMPLEMENT
- repl
- var
- dyn
- std library

DONE
- refcounting garbage collection
- tail recursion
- type tags
- pattern matching
